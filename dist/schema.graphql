# This file was generated. Do not edit manually.

schema {
    query: RootQueryType
}

interface GeoJSONGeometryInterface {
    bbox: [Float]
    coordinates: GeoJSONCoordinates
    crs: GeoJSONCoordinateReferenceSystem
    type: GeoJSONType!
}

interface GeoJSONInterface {
    bbox: [Float]
    crs: GeoJSONCoordinateReferenceSystem
    type: GeoJSONType!
}

"CRS object properties."
union GeoJSONCRSProperties = GeoJSONLinkedCRSProperties | GeoJSONNamedCRSProperties

"Geometry Types"
union GeoJSONGeometryTypes = GeoJSONLineString | GeoJSONMultiLineString | GeoJSONMultiPoint | GeoJSONMultiPolygon | GeoJSONPoint | GeoJSONPolygon

type ACSTestObject {
    message: String
}

type ERCS3TestObject {
    erc_s3_test: JSONObject
    message: String
}

"Coordinate Reference System (CRS) object."
type GeoJSONCoordinateReferenceSystem {
    properties: GeoJSONCRSProperties!
    type: GeoJSONCRSType!
}

"An object that links a geometry to properties in order to provide context."
type GeoJSONFeature implements GeoJSONInterface {
    bbox: [Float]
    crs: GeoJSONCoordinateReferenceSystem
    geometry: GeoJSONGeometryInterface
    id: String
    properties: JSONObject
    type: GeoJSONType!
}

"A set of multiple features."
type GeoJSONFeatureCollection implements GeoJSONInterface {
    bbox: [Float]
    crs: GeoJSONCoordinateReferenceSystem
    features: [GeoJSONFeature!]!
    type: GeoJSONType!
}

"Object describing a single connected sequence of geographical points."
type GeoJSONLineString implements GeoJSONGeometryInterface & GeoJSONInterface {
    bbox: [Float]
    coordinates: GeoJSONCoordinates
    crs: GeoJSONCoordinateReferenceSystem
    type: GeoJSONType!
}

"Properties for link based CRS object."
type GeoJSONLinkedCRSProperties {
    href: String!
    type: String
}

"Object describing multiple connected sequences of geographical points."
type GeoJSONMultiLineString implements GeoJSONGeometryInterface & GeoJSONInterface {
    bbox: [Float]
    coordinates: GeoJSONCoordinates
    crs: GeoJSONCoordinateReferenceSystem
    type: GeoJSONType!
}

"Object describing multiple geographical points."
type GeoJSONMultiPoint implements GeoJSONGeometryInterface & GeoJSONInterface {
    bbox: [Float]
    coordinates: GeoJSONCoordinates
    crs: GeoJSONCoordinateReferenceSystem
    type: GeoJSONType!
}

"Object describing multiple shapes formed by sets of geographical points."
type GeoJSONMultiPolygon implements GeoJSONGeometryInterface & GeoJSONInterface {
    bbox: [Float]
    coordinates: GeoJSONCoordinates
    crs: GeoJSONCoordinateReferenceSystem
    type: GeoJSONType!
}

"Properties for name based CRS object."
type GeoJSONNamedCRSProperties {
    name: String!
}

"Object describing a single geographical point."
type GeoJSONPoint implements GeoJSONGeometryInterface & GeoJSONInterface {
    bbox: [Float]
    coordinates: GeoJSONCoordinates
    crs: GeoJSONCoordinateReferenceSystem
    type: GeoJSONType!
}

"Object describing a single shape formed by a set of geographical points."
type GeoJSONPolygon implements GeoJSONGeometryInterface & GeoJSONInterface {
    bbox: [Float]
    coordinates: GeoJSONCoordinates
    crs: GeoJSONCoordinateReferenceSystem
    type: GeoJSONType!
}

type RootQueryType {
    acs_test: ACSTestObject
    auction_904_authorized(geoid_co: [String], limit: Int, offset: Int, page: Int, skipCache: Boolean): GeoJSONFeatureCollection
    auction_904_authorized_geojson(geoid_bl: [String], geoid_co: String, limit: Int, offset: Int, page: Int, skipCache: Boolean): GeoJSONFeatureCollection
    auction_904_defaults(geoid_co: [String], limit: Int, offset: Int, page: Int, skipCache: Boolean): GeoJSONFeatureCollection
    auction_904_defaults_geojson(geoid_bl: [String], geoid_co: String, limit: Int, offset: Int, page: Int, skipCache: Boolean): GeoJSONFeatureCollection
    auction_904_ready(geoid_co: [String], limit: Int, offset: Int, page: Int, skipCache: Boolean): GeoJSONFeatureCollection
    auction_904_ready_geojson(geoid_bl: [String], geoid_co: String, limit: Int, offset: Int, page: Int, skipCache: Boolean): GeoJSONFeatureCollection
    auction_904_subsidy_awards_geojson(geoid_co: String, limit: Int, offset: Int, page: Int, skipCache: Boolean): GeoJSONFeatureCollection
    county_summary(geoid_co: [String], limit: Int, offset: Int, page: Int, skipCache: Boolean): GeoJSONFeatureCollection
    county_summary_geojson(geoid_co: String, skipCache: Boolean): GeoJSONFeatureCollection
    erc_test: ERCS3TestObject
    setup: GeoJSONGeometryTypes
}

"Enumeration of all GeoJSON CRS object types."
enum GeoJSONCRSType {
    link
    name
}

"Enumeration of all GeoJSON object types."
enum GeoJSONType {
    Feature
    FeatureCollection
    GeometryCollection
    LineString
    MultiLineString
    MultiPoint
    MultiPolygon
    Point
    Polygon
}

"A (multidimensional) set of coordinates following x, y, z order."
scalar GeoJSONCoordinates

"Arbitrary JSON value"
scalar JSONObject
